name: Aegis CI/CD Pipeline

on:
  push:        { branches: [ main ] }
  pull_request: { branches: [ main ] }

jobs:
# ────────────────────────── unit‑tests ──────────────────────────
  test:
    runs-on: ubuntu-latest

    # spin‑up an ephemeral Postgres that mimics prod
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB:       test_db
          POSTGRES_USER:     test_user
          POSTGRES_PASSWORD: test_password
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        env:
          DATABASE_URL: postgresql+psycopg2://test_user:test_password@localhost:5432/test_db
        run: pytest -q

# ───────────────────────────── linters ───────────────────────────
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - run: |
          pip install black ruff
          ruff check .
          black --check .
